import socket
import time
dIP="10.0.0.201"
dPort=6633
dPID="\x00\x0a\xf0\x92\x1c\x21\x4d\x4d"
ethMAC=dPID[2:8]
firstPortNum="\x00\x10"
secondPortNum="\x00\x11"
thirdPortNum="\x00\x0d"
firstHwAddr="\xf0\x92\x1c\x21\x5d\xd1"
secondHwAddr="\xf0\x92\x1c\x21\x5d\xd2"
thirdHwAddr="\xf0\x92\x1c\x21\x5d\xd3"
firstBridgeName="16"
secondBridgeName="17"
thirdBridgeName="13"
firstPortName=firstBridgeName + ('\x00' * (16-len(firstBridgeName)))
secondPortName=secondBridgeName + ('\x00' * (16-len(secondBridgeName)))
thirdPortName=thirdBridgeName + ('\x00' * (16-len(thirdBridgeName)))
firstSwitchMAC="\xf0\x92\x1c\x21\x3d\xc0"
secondSwitchMAC="\xf0\x92\x1c\x21\x5d\x80"
firstSystemName="OF|00:0a:f0:92:1c:21:3d:c0"
secondSystemName="OF|00:0a:f0:92:1c:21:5d:80"
featureReplyLen="\x00\xe0"
lldpLen="\x00\x76"
none="None"
switchVendor="HP Networking"
switchType="BTTF"
switchVersion="VER 1.0"
s=socket.socket(socket.AF_INET,socket.SOCK_STREAM)
s.connect((dIP,dPort))
resp=s.recv(2048)
s.send('\x01\x00\x00\x08' + resp[4:8])
resp=s.recv(2048)
s.send('\x01\x06' + featureReplyLen + resp[4:8] + dPID
+'\x00\x00\x00\x00\x02\x00\x00\x00\x00\x00\x00\x87\x00\x00'
+'\x07\xf7' + firstPortNum + firstHwAddr + firstPortName
+'\x00\x00\x00\x00\x00\x00'
+'\x00\x00\x00\x00\x02\x20\x00\x00\x00\x00\x00\x00\x02\x2f\x00\x00'
+'\x00\x00\xff\xfe' + ethMAC +'\x6c\x6f\x63\x61\x6c\x00'
+'\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00'
+'\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00'
+'\x00\x00' + secondPortNum + secondHwAddr + secondPortName
+'\x00\x00\x00\x00\x00\x00'
+'\x00\x00\x00\x00\x02\x20\x00\x00\x00\x00\x00\x00\x02\x2f\x00\x00'
+'\x00\x00' + thirdPortNum + thirdHwAddr + thirdPortName
+'\x00\x00\x00\x00\x00\x00'
+'\x00\x00\x00\x00\x02\x20\x00\x00\x00\x00\x00\x00\x02\x2f\x00\x00'
+'\x00\x00')
s.recv(2048)
resp = s.recv(2048)
s.send('\x01\x08\x00\x0C' + resp[4:8] + ('\x00' * 2) + '\xff\xff')
s.recv(2048)
s.recv(2048)
s.recv(2048)
s.recv(2048)
s.recv(2048)
s.send('\x01\x0a' + lldpLen + '\x00\x00\x00\x00\xff\xff\xff\xff\x00\x64'
+ firstPortNum + '\x00\x00\x01\x80\xc2\x00\x00\x0e' + firstSwitchMAC
+ '\x88\xcc\x02\x07\x04' + firstSwitchMAC + '\x04\x03\x07' + firstBridgeName
+ '\x06\x02\x00\x78\x0a\x1a' + firstSystemName
+ '\xfe\x24\x00\x26\xe1\x00\x4f\x46\x7c\x31\x33\x40\x4f\x46\x7c\x30'
+ '\x30\x3a\x30\x61\x3a\x66\x30\x3a\x39\x32\x3a\x31\x63\x3a\x32\x31'
+ '\x3a\x33\x64\x3a\x63\x30\x00\x00')
s.send('\x01\x0a' + lldpLen + '\x00\x00\x00\x00\xff\xff\xff\xff\x00\x64'
+ secondPortNum + '\x00\x00\x01\x80\xc2\x00\x00\x0e' + secondSwitchMAC
+'\x88\xcc\x02\x07\x04' + secondSwitchMAC + '\x04\x03\x07' + secondBridgeName
+'\x06\x02\x00\x78\x0a\x1a' + firstSystemName
+'\xfe\x24\x00\x26\xe1\x00\x4f\x46\x7c\x31\x33\x40\x4f\x46\x7c\x30'
+'\x30\x3a\x30\x61\x3a\x66\x30\x3a\x39\x32\x3a\x31\x63\x3a\x32\x31'
+'\x3a\x35\x64\x3a\x38\x30\x00\x00')
while True:
	resp = s.recv(2048)
	s.send('\x01\x11\x04\x2c' + resp[4:8] +'\x00\x00\x00\x00' + switchVendor + ('\x00' * 244) + switchType + ('\x00' * 244) + switchVersion + ('\x00' * 251) + none + ('\x00' * 30) + none + ('\x00' * 252))
	resp=s.recv(2048)
	s.send('\x01\x02\x00\x08' + ('\x00' * 4))
	resp=s.recv(2048)
	s.send('\x01\x04\x00\x14' + resp[4:15] + '\x0b\x00\x00\x00\x01')
